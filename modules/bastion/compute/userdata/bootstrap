#!/bin/bash

# Debugging / Logging
set -x
exec > >(tee /var/log/user-data.log|logger -t user-data ) 2>&1
echo BEGIN
date '+%Y-%m-%d %H:%M:%S'

# Patch the system on first boot
yum update -y

export OCI_CLI_AUTH=instance_principal
export PATH="$PATH:/usr/bin"
export HOME="/opt/oci-caas/cinc"
export CHEF_HOME=$HOME
export PACKAGE_CACHE="$HOME/package_cache"
export OCI_CAAS_ETC="/opt/oci-caas/etc"

mkdir -p $PACKAGE_CACHE
cd $CHEF_HOME

oci os object get -bn ${bootstrap_bucket} --file $PACKAGE_CACHE/${bootstrap_bundle} --name ${bootstrap_bundle}
oci os object get -bn ${bootstrap_bucket} --file $PACKAGE_CACHE/cinc-${cinc_version}.el7.x86_64.rpm --name cinc-${cinc_version}.el7.x86_64.rpm

gzip -dc $PACKAGE_CACHE/${bootstrap_bundle} | tar -xvf -
rpm -i $PACKAGE_CACHE/cinc-${cinc_version}.el7.x86_64.rpm

# Write JSON file used for Cinc attributes
cat << EOF > $CHEF_HOME/attributes.json
{
    "package_cache": "$PACKAGE_CACHE",
    "ossec": {"address": "${wazuh_server}"},
    "ossec": {"registration_address": "${wazuh_server}"},
    "external_fqdn": "${external_fqdn}",
    "oci_caas_etc": "$OCI_CAAS_ETC"
}
EOF

mkdir -p $OCI_CAAS_ETC
chmod 700 $OCI_CAAS_ETC

mkdir /home/opc/.oath
chmod 700 /home/opc/.oath
chown opc:opc /home/opc/.oath

# Placeholder oath config for the opc user with one time password
authfile="/home/opc/.oath/opc.oath"
cat << EOF > $authfile
# INITIAL SETUP
HOTP opc - 2020
EOF

chmod 600 $authfile
chown root:root $authfile

# Run setup script for totp - deployed via Cinc
echo "bash ~/.oath/setup-totp.sh" >> /home/opc/.bash_profile

# Temporarily disable SELinux - required for firewalld updates during user-data
setenforce 0

# Run the Cinc client
cinc-client -z --runlist oci_caas_bastion -j $CHEF_HOME/attributes.json

# Re-enable SELinux
setenforce 1